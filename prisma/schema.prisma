generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String    // Hashed password
  image         String?
  bio           String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tasks         Task[]
  assignedTasks Task[]    @relation("AssignedTo")
  teams         Team[]
  comments      Comment[]
}

model Task {
  id           String     @id @default(cuid())
  title        String
  description  String?
  status       TaskStatus @default(TODO)
  priority     Priority   @default(MEDIUM)
  dueDate      DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  createdBy    User       @relation(fields: [createdById], references: [id])
  createdById  String
  assignedTo   User?      @relation("AssignedTo", fields: [assignedToId], references: [id])
  assignedToId String?
  team         Team       @relation(fields: [teamId], references: [id])
  teamId       String
  comments     Comment[]
  tags         Tag[]
}

model Team {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
  tasks       Task[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    String
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  color String
  tasks Task[]
}

enum UserRole {
  USER
  ADMIN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  IN_REVIEW
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

